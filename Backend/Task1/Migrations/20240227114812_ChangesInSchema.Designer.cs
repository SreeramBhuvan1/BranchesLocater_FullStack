// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task1.Data;

#nullable disable

namespace Task1.Migrations
{
    [DbContext(typeof(CustomerDataDbContext))]
    [Migration("20240227114812_ChangesInSchema")]
    partial class ChangesInSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task1.Data.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BU_Codes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Business_Hours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateOnly>("Opened_dt")
                        .HasColumnType("date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "19020 111th Ave",
                            BU_Codes = "AB100",
                            Business_Hours = "Monday - Friday 7:30am - 5:00pm",
                            CityId = 1,
                            Currency = "CAD",
                            Latitude = 54.0,
                            Longitude = -114.0,
                            Opened_dt = new DateOnly(2008, 9, 15),
                            Phone = "780-801-5006",
                            Status = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Address = "26229 Twp 531 A Unit 115",
                            BU_Codes = "ABACH",
                            Business_Hours = "Monday - Friday 7:30am - 5:00pm",
                            CityId = 2,
                            Currency = "CAD",
                            Latitude = 54.0,
                            Longitude = -114.0,
                            Opened_dt = new DateOnly(2008, 6, 26),
                            Phone = "(780)-960-4120",
                            Status = "Open"
                        });
                });

            modelBuilder.Entity("Task1.Data.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "EDMONTON",
                            Country = "Canada",
                            State = "Alberta"
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "ACHESON",
                            Country = "Canada",
                            State = "Alberta"
                        });
                });

            modelBuilder.Entity("Task1.Data.Branch", b =>
                {
                    b.HasOne("Task1.Data.City", "City")
                        .WithMany("Branches")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Task1.Data.City", b =>
                {
                    b.Navigation("Branches");
                });
#pragma warning restore 612, 618
        }
    }
}
